name: 🔬 Semantic Collapse Auditor CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: 🧪 Test CLI Functionality
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 🔧 Make CLI executable
      run: |
        chmod +x semantic-auditor
        chmod +x install.sh

    - name: ✅ Test CLI help
      run: |
        ./semantic-auditor --help

    - name: ✅ Test CLI version
      run: |
        ./semantic-auditor --version

    - name: 🎭 Test demo mode
      run: |
        echo "Test prompt for validation" > test_input.txt
        ./semantic-auditor --file test_input.txt --format json

    - name: 🚀 Test benchmark suite
      run: |
        timeout 60 ./semantic-auditor --benchmark quick || echo "Benchmark completed or timed out safely"

    - name: 📊 Test report generation
      run: |
        echo "Security test prompt" > security_test.txt
        ./semantic-auditor --file security_test.txt --report test_report.txt
        test -f test_report.txt && echo "Report generated successfully"

  lint:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 📦 Install linting tools
      run: |
        pip install flake8 black isort

    - name: 🔍 Lint Python code
      run: |
        flake8 evaluation-frameworks/ demos-and-tools/ precision-measurement/ flexibility-measurement/ --count --select=E9,F63,F7,F82 --show-source --statistics
        
    - name: 📝 Check code formatting
      run: |
        black --check --diff evaluation-frameworks/ demos-and-tools/ precision-measurement/ flexibility-measurement/ || echo "Some files need formatting"

  security:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 🔒 Install security tools
      run: |
        pip install bandit safety

    - name: 🛡️ Run security analysis
      run: |
        bandit -r evaluation-frameworks/ demos-and-tools/ precision-measurement/ flexibility-measurement/ -f json -o security-report.json || echo "Security scan completed"
        safety check --json || echo "Dependency check completed"

  deploy-demo:
    name: 🚀 Deploy Demo
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: [test, lint, security]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🚀 Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Semantic Collapse Auditor ${{ github.ref }}
        body: |
          🔬 **Semantic Collapse Auditor Release**
          
          ✅ Professional CLI with ROC-calibrated thresholds
          ✅ Enterprise-grade failure mode detection  
          ✅ Complete benchmarking suite
          ✅ Demo mode ready for evaluation
          
          **🎭 Demo Installation:**
          ```bash
          git clone https://github.com/${{ github.repository }}.git
          cd semantic-uncertainty-runtime
          ./install.sh
          semantic-auditor --benchmark quick
          ```
          
          **💼 Commercial Licensing:** See [LICENSING.md](LICENSING.md)
        draft: false
        prerelease: false 